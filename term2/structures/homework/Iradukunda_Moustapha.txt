#include <iostream>
#include <fstream>
#include<cctype>
using namespace std;
struct Student
{
    int rollno;
    int age;
    int marks;
    string name;
};

void mergeSort(Student a[], int start, int end)
{
    if (start < end)
    {
        int mid = (start + end) / 2;
        mergeSort(a, start, mid);
        mergeSort(a, mid + 1, end);
        int i = start, j = mid + 1, k = 0;
        Student temp[end - start + 1];
        while (i <= mid && j <= end)
        {
            if (a[i].marks < a[j].marks)
            {
                temp[k++] = a[i++];
            }
            else
            {
                temp[k++] = a[j++];
            }
        }
        while (i <= mid)
        {
            temp[k++] = a[i++];
        }
        while (j <= end)
        {
            temp[k++] = a[j++];
        }
        k = 0;
        for (int i = start; i <= end; i++)
        {
            a[i] = temp[k++];
        }
    }
}

int main()
{
    int n, sum = 0;
    string str;
    cout << "Enter the number of students: ";
    cin >> n;

    Student a[n];
    for (int i = 0; i < n; i++)
    {
        cout << "Enter the details for student " << i + 1 << ":" << endl;
        // cout<<"Full names: ";
        while(true){
        cout << "Full names:: "<<flush;
        getline(cin,a[i].name);
        if ( !std::cin.fail() )
        {
            for ( char &c : a[i].name ) 
            {
                if ( !std::isalpha( c ) )
                    goto input_invalid;
            }
            break;
        }

    input_invalid:
        
        std::cout << "Error! Invalid input." << std::endl;
        std::cin.clear();
        std::cin.ignore( 256, '\n' );
    }

        cout << "Roll number: ";
        while (true)
        {
        cin >> a[i].rollno;
         if(cin.fail() || a[i].rollno <0){
            cin.clear();
            getline(cin, str);
            cout<<"Invalid Roll number ! "<<endl;
            cout<<"Type again: ";
            continue;

         }
         if(cin.peek() != '\n'){
            getline(cin, str);
            cout<<"Invalid Roll number!"<<endl;
            cout<<"Type again: "; 
            
         }else{
            break;
         }
            
        }
        cout << "Age: ";
        while (true)
        {
        cin >> a[i].age;
        if(cin.fail() || a[i].age < 10 || a[i].age > 30){
            cin.clear();
            getline(cin, str);
            cout<<"Invalid age !"<<endl;
            cout<<"Type again: ";
            continue;
        }
        if(cin.peek() != '\n'){
         getline(cin, str);
         cout<<"Invalid age !"<<endl;
         cout<<"Type again: ";
        }else{
            break;
        }
            
        }
        cout << "Marks: ";
        while (true)
        {
        cin >> a[i].marks;
             if(cin.fail() || a[i].marks < 0 || a[i].marks > 50){
            cin.clear();
            getline(cin, str);
            cout<<"Invalid marks !"<<endl;
            cout<<"Type again: ";
            continue;
        }
        if(cin.peek() != '\n'){
         getline(cin, str);
         cout<<"Invalid marks !"<<endl;
         cout<<"Type again: ";
        }else{
            break;
        }
        }
        cout << endl;
    }
    ofstream outfile("student_data.txt");
    for (int i = 0; i < n; i++)
    {
        outfile << a[i].rollno << " " << a[i].age << " " << a[i].marks << endl;
    }
    outfile.close();
    ifstream infile("student_data.txt");
    for (int i = 0; i < n; i++)
    {
        infile >> a[i].rollno >> a[i].age >> a[i].marks;
    }
    infile.close();
    mergeSort(a, 0, n - 1);
    cout << "Sorted student data based on marks:" << endl;
    cout << "Names\tRoll number\tAge\tMarks" << endl;
    for (int i = 0; i < n; i++)
    {
        cout << a->name<<"\t"<<a[i].rollno << "\t" << a[i].age << "\t" << a[i].marks << endl;
        sum += a[i].marks;
    }
    cout << "Average marks: " << (double)sum / n << endl;
    cout << "Number of distinct students: " << n << endl;

    return 0;
}
